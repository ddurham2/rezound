$Id$

--
Hey, could you add "-D__func__=__PRETTY_FUNCTION__"  to the compiler 
flags if gcc is detected as the compiler.  __func__ is ANSI C which says 
that that macro name should contain the name of the function.  Well, 
__PRETTY_FUNCTION__ is a gcc extension which contains a more complete 
name of the function/method.

I would have added it myslef to configure.in's CXXFLAGS variable's 
initial value, but then I thought about non-gcc compilers.  So it needs 
to be done when gcc iff detected.  Other compilers would probably have 
this extension, but __func__ will do if there is not that extension on 
another brand compiler.


- might ought to verify that bootstrap is running within the toplevel directory
and move it into config

-- See if things might possibly work with -O2 set. Decide if we should be using 
-O2 or not.

--simplify the AUTHORS File

--possibly revert frontend Makefile to NOT build .la library the vote is still out on this one.

--------------The stuff below this line can wait, because I don't expect to
--------------See a problem with GNU/Linux systems related to thiese.
 Look for other possible trouble spots such as stdint.h int32_t int16_t etc
and set up a common.h header to deal with these problems.  -- I'll wait until these things come up before I worry about them.
    
    --provide substitute functions for strerror, strdup and strtol (These may be missing for some platforms)  Check GNU libiberty (ftp://sourceware.cygnus.com/pub/binutils/) or libit(http://www.iro.umontreal.ca/~pinard/libit/) for fallback functions.
    --also make sure tests for above are working properly. I suspect mine are broken.
    -- The default AC_CHECK_FUNCS() macro isn't detecting any of these, (nor is it finding printf, time or rand). So for now I'll ignore these checks, and worry about it when (and if) we get a bug report related to this problem.
